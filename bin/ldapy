#!/bin/bash

# LDAP Server Management Script

set -e

LDAP_HOST="localhost"
LDAP_PORT="389"
ADMIN_DN="cn=admin,dc=electronicpanopti,dc=com"
ADMIN_PASSWORD="admin123"
BASE_DN="dc=electronicpanopti,dc=com"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

function print_usage() {
    echo "Usage: $0 [command]"
    echo ""
    echo "Commands:"
    echo "  start       Start the LDAP server"
    echo "  stop        Stop the LDAP server"
    echo "  restart     Restart the LDAP server"
    echo "  status      Show container status"
    echo "  logs        Show container logs"
    echo "  search      Search all entries"
    echo "  users       List all users"
    echo "  groups      List all groups"
    echo "  test        Test LDAP connectivity"
    echo "  web         Open web admin interface"
    echo "  clean       Stop and remove all data"
    echo ""
}

function start_ldap() {
    echo -e "${GREEN}Starting LDAP server...${NC}"
    docker-compose up -d
    echo -e "${GREEN}LDAP server started!${NC}"
    echo "Web interface: http://localhost:8080"
    echo "LDAP port: 389"
}

function stop_ldap() {
    echo -e "${YELLOW}Stopping LDAP server...${NC}"
    docker-compose down
    echo -e "${GREEN}LDAP server stopped!${NC}"
}

function wipe_ldap() {
    echo -e "${YELLOW}Stopping and wiping LDAP server...${NC}"
    docker-compose down -v
    echo -e "${GREEN}LDAP server stopped and wiped!${NC}"
}

function restart_ldap() {
    stop_ldap
    sleep 2
    start_ldap
}

function show_status() {
    echo -e "${GREEN}Container status:${NC}"
    docker-compose ps
}

function show_logs() {
    echo -e "${GREEN}Container logs:${NC}"
    docker-compose logs --tail=50 -f
}

function search_all() {
    echo -e "${GREEN}Searching all LDAP entries...${NC}"
    ldapsearch -x -H ldap://${LDAP_HOST}:${LDAP_PORT} \
        -D "${ADMIN_DN}" -w "${ADMIN_PASSWORD}" \
        -b "${BASE_DN}" \
        "(objectClass=*)"
}

function list_users() {
    echo -e "${GREEN}Listing all users...${NC}"
    ldapsearch -x -H ldap://${LDAP_HOST}:${LDAP_PORT} \
        -D "${ADMIN_DN}" -w "${ADMIN_PASSWORD}" \
        -b "ou=people,${BASE_DN}" \
        "(objectClass=inetOrgPerson)" \
        cn mail uid
}

function list_groups() {
    echo -e "${GREEN}Listing all groups...${NC}"
    ldapsearch -x -H ldap://${LDAP_HOST}:${LDAP_PORT} \
        -D "${ADMIN_DN}" -w "${ADMIN_PASSWORD}" \
        -b "ou=groups,${BASE_DN}" \
        "(objectClass=groupOfNames)" \
        cn member
}

function test_connectivity() {
    echo -e "${GREEN}Testing LDAP connectivity...${NC}"
    if timeout 5 bash -c "</dev/tcp/${LDAP_HOST}/${LDAP_PORT}"; then
        echo -e "${GREEN}✓ LDAP server is reachable on ${LDAP_HOST}:${LDAP_PORT}${NC}"
        
        # Test authentication
        if ldapwhoami -x -H ldap://${LDAP_HOST}:${LDAP_PORT} \
            -D "${ADMIN_DN}" -w "${ADMIN_PASSWORD}" >/dev/null 2>&1; then
            echo -e "${GREEN}✓ Authentication successful${NC}"
        else
            echo -e "${RED}✗ Authentication failed${NC}"
        fi
    else
        echo -e "${RED}✗ LDAP server is not reachable on ${LDAP_HOST}:${LDAP_PORT}${NC}"
    fi
}

function open_web() {
    echo -e "${GREEN}Opening web interface...${NC}"
    open http://localhost:8080 2>/dev/null || echo "Please open http://localhost:8080 in your browser"
}

function clean_all() {
    echo -e "${RED}This will stop the server and remove ALL data. Are you sure? (y/N)${NC}"
    read -r response
    if [[ "$response" =~ ^[Yy]$ ]]; then
        echo -e "${YELLOW}Cleaning up...${NC}"
        docker-compose down -v --remove-orphans
        echo -e "${GREEN}Cleanup complete!${NC}"
    else
        echo "Cancelled."
    fi
}

# Check if ldapsearch is available
function check_ldap_tools() {
    if ! command -v ldapsearch &> /dev/null; then
        echo -e "${YELLOW}Warning: ldapsearch not found. Install with: brew install openldap${NC}"
        return 1
    fi
    return 0
}

# Main script logic
case "$1" in
    start)
        start_ldap
        ;;
    stop)
        stop_ldap
        ;;
    wipe)
        wipe_ldap
        ;;
    restart)
        restart_ldap
        ;;
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    search)
        check_ldap_tools && search_all
        ;;
    users)
        check_ldap_tools && list_users
        ;;
    groups)
        check_ldap_tools && list_groups
        ;;
    test)
        test_connectivity
        ;;
    web)
        open_web
        ;;
    clean)
        clean_all
        ;;
    *)
        print_usage
        exit 1
        ;;
esac
